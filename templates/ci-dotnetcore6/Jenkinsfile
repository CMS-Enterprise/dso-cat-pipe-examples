@Library("dso-shared-lib@main") _
def podYaml = libraryResource "podTemplates/dotnetcore6-agent.yaml"
pipeline {
    agent{
        kubernetes {
            yaml podYaml
        }
    }
    stages{
        stage ("init"){
            steps {
                container ("base-agent"){
                    script{
                        git credentialsId: "github_creds" , url: "${github_repo}"
                        init()
                    }
                }
            }
        }
         stage ("dotnet build"){
            steps {
                container ("dotnetcore6"){
                    script{
                        dotnet.build()
                    }
                }
            }
        }
         stage ("dotnet test"){
            steps {
                container ("dotnetcore6"){
                    script{
                        dotnet.test()
                    }
                }
            }
        }
         stage ("sonarqube scan"){
            steps {
                container ("sonarqube"){
                    script{
                        def properties=[
                            appName: "${app_name}",
                            tech: "${tech}",
                            ghOrg: "${gh_org}",
                            sonarqube: [
                                projectKey: "${sq_project_key}"
                            ]
                        ]                        
                        sonarqube.scan("${properties}")
                    }
                }
            }
        }
         stage ("kaniko upload"){
            steps {
                container ("kaniko"){
                    script{
                        def properties=[
                            appName: "${app_name}",
                            tech: "${tech}",
                            build: [
                                dockerargs: "${docker_args}",
                                artifactoryPath: "${artifactory_path}",
                                workDir: "${work_directory}",
                                dockerFile: "${docker_file}"
                            ]
                        ]
                        kaniko.upload("${properties}")
                    }
                }
            }
        }
    }
    post {
        success {
            script{
                notification.success()
            }
        }
        failure {
            script{
                notification.failure()
            }
        }
    }
}